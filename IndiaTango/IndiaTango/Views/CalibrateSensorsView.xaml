<Window x:Class="IndiaTango.Views.CalibrateSensorsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:cal="http://www.caliburnproject.org"
        xmlns:charts="clr-namespace:Visiblox.Charts;assembly=Visiblox.Charts"
        xmlns:multiseries="clr-namespace:IndiaTango.MultiSeriesBinding"
        xmlns:ext="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit/extended"
        Title="{Binding Title}" Icon="{Binding Icon}" Height="700" Width="950" WindowStartupLocation="CenterScreen" Cursor="{Binding ViewCursor}">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="370" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <GroupBox Grid.Row="0" Header="Select A Sensor To Graph" BorderBrush="OrangeRed" Margin="10 5 5 5">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Top" Text="Sensor:                                    Variable Name:" Margin="7,0"/>
                    <ListBox ItemsSource="{Binding SensorList}" SelectionMode="Single" Margin="5" SelectedItem="{Binding SelectedSensor}" FontFamily="Consolas" />
                </DockPanel>
            </GroupBox>
  
            <GroupBox Grid.Row="1" Header="Actions" BorderBrush="OrangeRed" Margin="10 5 5 10">
                <StackPanel>
                    <WrapPanel Margin="0">
                        <ext:SplitButton Name="btnUndo" FontSize="15" Width="100" Height="100" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5" VerticalContentAlignment="Bottom" IsEnabled="{Binding UndoButtonEnabled}" IsOpen="{Binding ShowUndoStates, Mode=TwoWay}">
                            <StackPanel Orientation="Vertical">
                                <Image Source="/B3;component/Images/undo.png" Width="64" Height="64" />
                                <TextBlock Text="Undo" HorizontalAlignment="Center" />
                            </StackPanel>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <cal:ActionMessage MethodName="btnUndo" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ext:SplitButton.DropDownContent>
                                <ListBox Name="undoStates" ItemsSource="{Binding UndoStates}" SelectionMode="Single">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <cal:ActionMessage MethodName="UndoPathSelected">
                                                <cal:Parameter Value="$eventArgs" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ListBox>
                            </ext:SplitButton.DropDownContent>
                        </ext:SplitButton>

                        <ext:SplitButton Name="btnRedo" FontSize="15" Width="100" Height="100" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5" VerticalContentAlignment="Bottom" IsEnabled="{Binding RedoButtonEnabled}" IsOpen="{Binding ShowRedoStates, Mode=TwoWay}">
                            <StackPanel Orientation="Vertical">
                                <Image Source="/B3;component/Images/redo.png" Width="64" Height="64" />
                                <TextBlock Text="Redo" HorizontalAlignment="Center" />
                            </StackPanel>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <cal:ActionMessage MethodName="btnRedo" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ext:SplitButton.DropDownContent>
                                <ListBox Name="redoStates" ItemsSource="{Binding RedoStates}" SelectionMode="Single">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <cal:ActionMessage MethodName="RedoPathSelected">
                                                <cal:Parameter Value="$eventArgs" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ListBox>
                            </ext:SplitButton.DropDownContent>
                        </ext:SplitButton>

                        <Button Name="btnDone" FontSize="15" Width="100" Height="100" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5" VerticalContentAlignment="Bottom" >
                            <StackPanel Orientation="Vertical">
                                <Image Source="/B3;component/Images/done_64.png" Width="64" Height="64" />
                                <TextBlock Text="Done" HorizontalAlignment="Center" />
                            </StackPanel>
                        </Button>
                    </WrapPanel>

                    <Rectangle Height="3" Fill="OrangeRed" Margin="5" SnapsToDevicePixels="True" Stroke="White" />

					<StackPanel Orientation="Horizontal" Margin="5">
						<TextBlock Text="Calibration Method:   "/>
						<RadioButton Content="Manual    " IsChecked="{Binding UseManualCalibration}"/>
						<RadioButton Content="Automatic"/>
					</StackPanel>
					
					
                    <StackPanel Orientation="Horizontal" Margin="5 5 5 0">
                        <TextBlock Text="Range:" VerticalAlignment="Center" Margin="0 0 10 0" />
                        <ext:DateTimePicker Width="125" Value="{Binding StartTime, Mode=TwoWay}" Format="Custom" FormatString="dd/MM/yy HH:mm" IsEnabled="{Binding CanEditDates}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="ValueChanged">
                                    <cal:ActionMessage MethodName="StartTimeChanged">
                                        <cal:Parameter Value="$eventArgs" />
                                    </cal:ActionMessage>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ext:DateTimePicker>
                        <TextBlock Text=" - to - " VerticalAlignment="Center" />
                        <ext:DateTimePicker Width="125" Value="{Binding EndTime, Mode=TwoWay}" Format="Custom" FormatString="dd/MM/yy HH:mm" IsEnabled="{Binding CanEditDates}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="ValueChanged">
                                    <cal:ActionMessage MethodName="EndTimeChanged">
                                        <cal:Parameter Value="$eventArgs" />
                                    </cal:ActionMessage>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ext:DateTimePicker>
                    </StackPanel>
                    
					<TabControl Padding="0" Margin="5" BorderThickness="0" SelectedIndex="{Binding SelectedTabIndex}" TabStripPlacement="Top" Height="190" >
						<TabControl.ItemContainerStyle>
							<Style TargetType="{x:Type TabItem}">
								<Setter Property="Visibility" Value="Collapsed" />
							</Style>
						</TabControl.ItemContainerStyle>
						
						<TabItem Header="Manual">
							<Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
								<TextBlock Text="Enter Formula Below:" Margin="0,5" Grid.Row="0"/>

								<TextBox Name="txtFormula" BorderBrush="OrangeRed" Grid.Row="1" Margin="0,0,0,10" Text="{Binding FormulaText, Mode=TwoWay, UpdateSourceTrigger=Explicit}" Background="{Binding FormulaBoxBackground}" KeyUp="TextBox_KeyUp" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" />

								<WrapPanel HorizontalAlignment="Right" Grid.Row="2" Margin="0,5,0,0">
									<Button Name="btnHelp" FontSize="15"  HorizontalAlignment="Left" Margin="5,0" VerticalContentAlignment="Bottom" VerticalAlignment="Bottom" >
										<StackPanel Orientation="Horizontal">
											<Image Source="/B3;component/Images/help_32.png" Width="32" Height="32" VerticalAlignment="Top" HorizontalAlignment="Left" SnapsToDevicePixels="True" />
											<TextBlock Text="Help" VerticalAlignment="Center" Margin="5" />
										</StackPanel>
									</Button>
									
									<Button Name="btnApplyFormula" FontSize="15"  HorizontalAlignment="Right" Margin="5,0" VerticalContentAlignment="Bottom" IsEnabled="{Binding ApplyButtonEnabled}" VerticalAlignment="Bottom">
										<StackPanel Orientation="Horizontal">
											<Image Source="/B3;component/Images/right_32.png" Width="32" Height="32" VerticalAlignment="Top" HorizontalAlignment="Left" SnapsToDevicePixels="True" />
											<TextBlock Text="Apply" VerticalAlignment="Center" Margin="5" />
										</StackPanel>
									</Button>

									<Button Name="btnClearFormula" FontSize="15" Margin="5,0,0,0" VerticalContentAlignment="Bottom" VerticalAlignment="Bottom">
										<StackPanel Orientation="Horizontal">
											<Image Source="/B3;component/Images/delete_32.png" Width="32" Height="32" VerticalAlignment="Top" HorizontalAlignment="Left" SnapsToDevicePixels="True" />
											<TextBlock Text="Clear" VerticalAlignment="Center" Margin="5" />
										</StackPanel>
									</Button>
								</WrapPanel>
                            </Grid>
						</TabItem>
						
						<TabItem Header="Auto">
							<Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
								<TextBlock Text="Enter the calibration values below:" Margin="0, 5" Grid.Row="0"/>
								
								<Grid Margin="5" Grid.Row="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="24"/>
										<RowDefinition Height="26"/>
										<RowDefinition Height="26"/>
									</Grid.RowDefinitions>

									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="50"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="1" Text="Calibrated" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                    <TextBlock Grid.Row="0" Grid.Column="2" Text="Current" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                    
                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="A" VerticalAlignment="Center" HorizontalAlignment="Center" />
									<TextBlock Grid.Row="2" Grid.Column="0" Text="B" VerticalAlignment="Center" HorizontalAlignment="Center" />

                                    <TextBox Name="txtCalA" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="2" Text="{Binding CalAText, Mode=TwoWay, UpdateSourceTrigger=Explicit}" Background="{Binding CalABackground}" KeyUp="txtCalA_KeyUp" />
                                    <TextBox Name="txtCalB" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Margin="2" Text="{Binding CalBText, Mode=TwoWay, UpdateSourceTrigger=Explicit}" Background="{Binding CalBBackground}" KeyUp="txtCalB_KeyUp" />
                                    <TextBox Name="txtCurA" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Margin="2" Text="{Binding CurAText, Mode=TwoWay, UpdateSourceTrigger=Explicit}" Background="{Binding CurABackground}" KeyUp="txtCurA_KeyUp" />
                                    <TextBox Name="txtCurB" Grid.Row="2" Grid.Column="2" VerticalAlignment="Center" Margin="2" Text="{Binding CurBText, Mode=TwoWay, UpdateSourceTrigger=Explicit}" Background="{Binding CurBBackground}" KeyUp="txtCurB_KeyUp" />
								</Grid>

								
								<WrapPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="3">
									<Button Name="btnApplyAuto" FontSize="15"  HorizontalAlignment="Left" Margin="0" VerticalContentAlignment="Bottom" VerticalAlignment="Bottom" IsEnabled="{Binding AutoCalibrationEnabled}" >
										<StackPanel Orientation="Horizontal">
											<Image Source="/B3;component/Images/right_32.png" Width="32" Height="32" VerticalAlignment="Top" HorizontalAlignment="Left" SnapsToDevicePixels="True" />
											<TextBlock Text="Apply" VerticalAlignment="Center" Margin="5" />
										</StackPanel>
									</Button>

                                    <Button Name="btnClearAuto" FontSize="15" Margin="5,0,0,0" VerticalContentAlignment="Bottom" VerticalAlignment="Bottom">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/B3;component/Images/delete_32.png" Width="32" Height="32" VerticalAlignment="Top" HorizontalAlignment="Left" SnapsToDevicePixels="True" />
                                            <TextBlock Text="Clear" VerticalAlignment="Center" Margin="5" />
                                        </StackPanel>
                                    </Button>
                                </WrapPanel>
                            </Grid>
						</TabItem>
					</TabControl>


                </StackPanel>
            </GroupBox>
        </Grid>

        <GroupBox Grid.Column="1" Header="Current State" BorderBrush="OrangeRed" Margin="5 5 10 10">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <charts:Chart Title="{Binding ChartTitle}" Grid.Row="0" Behaviour="{Binding Behaviour}" multiseries:MultiSeries.Source="{Binding ChartSeries}" Margin="10 10 10 0">
                    <charts:Chart.YAxis>
                        <charts:LinearAxis Title="{Binding YAxisTitle}" Range="{Binding Range}" />
                    </charts:Chart.YAxis>
                    <charts:Chart.XAxis>
                        <charts:DateTimeAxis Title="Date" />
                    </charts:Chart.XAxis>
                </charts:Chart>

                <Grid Grid.Row="1" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" MaxWidth="300" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Stretch">
                        <Slider Width="100" Minimum="{Binding MinimumMinimum}" Maximum="{Binding MaximumMinimum}" Value="{Binding Minimum, Mode=TwoWay}" TickPlacement="BottomRight" VerticalAlignment="Center" Margin="10" IsSnapToTickEnabled="True" TickFrequency="10" />
                        <TextBox Name="MinimumValue" Text="{Binding MinimumValue, Mode=TwoWay, UpdateSourceTrigger=Explicit}"  VerticalAlignment="Center" Margin="0" FontSize="15" Width="50" KeyUp="MinimumValue_KeyUp" />

                        <Slider Width="100" Minimum="{Binding MinimumMaximum}" Maximum="{Binding MaximumMaximum}" Value="{Binding Maximum, Mode=TwoWay}" TickPlacement="BottomRight" VerticalAlignment="Center"  Margin="10" IsSnapToTickEnabled="True" TickFrequency="10" />
                        <TextBox Name="MaximumValue" Text="{Binding MaximumValue, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Center" Margin="0" FontSize="15" Width="50" KeyUp="MaximumValue_KeyUp" />
                    </StackPanel>
                    <Grid Grid.Column="1" HorizontalAlignment="Right" Margin="5,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="Sampling Size:" VerticalAlignment="Center" />
                        <ComboBox Grid.Column="1" Margin="5" SelectedIndex="{Binding SelectedSamplingCapIndex, Mode=TwoWay}" ItemsSource="{Binding SamplingCaps}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <cal:ActionMessage MethodName="SamplingCapChanged">
                                        <cal:Parameter Value="$eventArgs" />
                                    </cal:ActionMessage>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                    </Grid>
                </Grid>
            </Grid>
        </GroupBox>
    </Grid>
</Window>
